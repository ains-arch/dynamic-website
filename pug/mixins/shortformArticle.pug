mixin shortformArticle(article, rss=false, feed=false)
  .article
    if rss
      if article.image 
        img(src=article.image.src, class="webfeedsFeaturedVisual", alt=article.image.alt, style="max-width: 300px;")

    if !rss
      .title
        a(href=article.href) "#{article.title}"

        if article.parenthetical
          |  (#{article.parenthetical})

        if article.parenthetical || article.title && !article.title.match(/[.?!]$/m)
          |.

    .byline
      if article.author
        | #{article.author}
      
      if article.work || article.publisher 
        if article.preposition != null 
          |  #{article.preposition} 
        else if article.work
          |  in 
        else 
          |  for 
      else
        |.

      if article.work
        if article.workItalics === false
          | #{article.work}.
        else
          i #{article.work}.

      if article.publisher
        |  #{article.publisher}.

      if feed
        span.read-date
        if article.formattedDate
          |  Published #{article.formattedDate}.

        if !feed
          include ./verb.pug
          +verb(article, to=false, capitalize=true)
          | on #{article.formattedStarted}
    
    if !feed
      .details
        span.read-date
          if article.formattedDate
            | Published #{article.formattedDate}.

          if !feed
            include ./verb.pug
            +verb(article, to=false, capitalize=true)
            | on #{article.formattedStarted}

    if feed && article.summary
      blockquote.summary
        != article.summary
    else if article.summary
      .summary
        != article.summary
    
    if article.relatedReading && article.relatedReading.length 
      .related-reading
        if !rss
          i.fab.fa-wikipedia-w
        span.header Related reading: 

        each rr, index in article.relatedReading
          a(href=rr.href) #{rr.title}
          if index !== article.relatedReading.length - 1
            | , 

    if !rss && !feed && article.tags && article.tags.length
      .tags 
        span.tags= article.tags.map(function(t) { return t.text }).join(', ')
